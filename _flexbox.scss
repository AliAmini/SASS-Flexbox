/* The Best Support For Flexbox Layout Module */

// display: flex
@mixin display_flex() {
	display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
	display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
	display: -ms-flexbox;      /* TWEENER - IE 10 */
	display: -webkit-flex;     /* NEW - Chrome */
	display: flex; 
}

// display: inline-flex
@mixin display_inline_flex() {
	display:-webkit-inline-box;      /* OLD - iOS 6-, Safari 3.1-6 */
	display:-moz-inline-box;		 /* OLD - Firefox 19- (buggy but mostly works) */
	display:-ms-inline-flexbox;	 	 /* TWEENER - IE 10 */
	display:-webkit-inline-flex;	 /* NEW - Chrome */
	display:inline-flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
}

//Flex
@mixin flex($value) {
	-webkit-box-flex: $value;      /* OLD - iOS 6-, Safari 3.1-6 */
	-moz-box-flex: $value;         /* OLD - Firefox 19- */
	-webkit-flex: $value;          /* Chrome */
	-ms-flex: $value;              /* IE 10 */
	flex: $value;                  /* NEW, Spec - Opera 12.1, Firefox 20+ */
}

//Order
@mixin order($value) {
	-webkit-box-ordinal-group: $value;   /* OLD - iOS 6-, Safari 3.1-6 */
	-moz-box-ordinal-group: $value;      /* OLD - Firefox 19- */
	-ms-flex-order: $value;              /* TWEENER - IE 10 */
	-webkit-order: $value;               /* NEW - Chrome */
	order: $value;  
}

// JUSTIFY CONTENT METHODS
// justify-content: [flex-]start;
@mixin justify_content_start() {
	-webkit-box-pack: start; 
	-moz-box-pack: start;
	-ms-flex-pack: start;
	-webkit-justify-content: flex-start;
	justify-content: flex-start;
}

// justify content center (main axis centering)
@mixin justify_content_center() {
	-webkit-box-pack: center; 
	-moz-box-pack: center;
	-ms-flex-pack: center;
	-webkit-justify-content: center;
	justify-content: center;
}

// justify-content: [flex-]end;
@mixin justify_content_end() {
	-webkit-box-pack: end; 
	-moz-box-pack: end;
	-ms-flex-pack: end;
	-webkit-justify-content: flex-end;
	justify-content: flex-end;
}

// justify-content: space-between;
// distributes the space between but not before or after the elements
@mixin justify_content_space_between() {
	-webkit-box-pack: justify; 
	-moz-box-pack: justify;
	-ms-flex-pack: justify;
	-webkit-justify-content: space-between;
	justify-content: space-between;
}

// justify-content: space-around;
// distributes the space around the elements
@mixin justify_content_space_around() {
	-webkit-box-pack: justify; 	/* The old syntax does not support space-around, so this falls back to space-between */
	-moz-box-pack: justify;		/* The old syntax does not support space-around, so this falls back to space-between */
	-ms-flex-pack: distribute;
	-webkit-justify-content: space-around;
	justify-content: space-around;
}


// ALIGN ITEMS METHODS
// Align items aligns elements on the cross axis
// align-items: [flex-]start
@mixin align_items_start () {
	-webkit-box-align: start; 
	-moz-box-align: start; 
	-ms-flex-align: start; 
	-webkit-align-items: flex-start;
	-moz-align-items: flex-start;
	align-items: flex-start;
}

// align-items: center
@mixin align_items_center() {
	-webkit-box-align: center; 
	-moz-box-align: center; 
	-ms-flex-align: center; 
	-webkit-align-items: center;
	-moz-align-items: center;
	align-items: center;
}

// align-items: [flex-]end
@mixin align_items_end(){
	-webkit-box-align: end; 
	-moz-box-align: end; 
	-ms-flex-align: end; 
	-webkit-align-items: flex-end;
	-moz-align-items: flex-end;
	align-items: flex-end;
}

// align-items: baseline
// If the flex item's inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment: all participating flex items on the line are aligned such that their baselines align, and the item with the largest distance between its baseline and its cross-start margin edge is placed flush against the cross-start edge of the line.
@mixin align_items_baseline(){
	-webkit-box-align: baseline; 
	-moz-box-align: baseline; 
	-ms-flex-align: baseline; 
	-webkit-align-items: baseline;
	-moz-align-items: baseline;
	align-items: baseline;
}

// align-items: stretch
// Flex items are stretched such as the cross-size of the item's margin box is the same as the line while respecting width and height constraints.
@mixin align_items_stretch(){
	-webkit-box-align: stretch; 
	-moz-box-align: stretch; 
	-ms-flex-align: stretch; 
	-webkit-align-items: stretch;
	-moz-align-items: stretch;
	align-items: stretch;
}

// ALIGN SELF METHODS
// NOTE: The old (2009) syntax does not support this property
// Align-self: Individual cross-axis alignment. Override to align individual items along the cross-axis

// align-self:auto
@mixin align_self_auto(){
	-ms-flex-item-align: auto; 
	-webkit-align-self: auto;
	-moz-align-self: auto;
	align-self: auto;
}

// align-self:start
@mixin align_self_start(){
	-ms-flex-item-align: start; 
	-webkit-align-self: flex-start;
	-moz-align-self: flex-start;
	align-self: flex-start;
}

// align-self:center
@mixin align_self_center(){
	-ms-flex-item-align: center; 
	-webkit-align-self: center;
	-moz-align-self: center;
	align-self: center;
}


// align-self:end
@mixin align_self_end(){
	-ms-flex-item-align: end; 
	-webkit-align-self: flex-end;
	-moz-align-self: flex-end;
	align-self: flex-end;
}


// align-self:baseline
@mixin align_self_baseline(){
	-ms-flex-item-align: baseline;
	-webkit-align-self: baseline;
	-moz-align-self: baseline;
	align-self: baseline;
}

// align-self:stretch
@mixin align_self_stretch(){
	-ms-flex-item-align: stretch;
	-webkit-align-self: stretch;
	-moz-align-self: stretch;
	align-self: stretch;
}


// ALIGN CONTENT METHODS
// NOTE: The old (2009) syntax does not support this property
// Flex line alignment: specifying alignment of flex lines along the cross-axis


// align-content: start
@mixin align_content_start(){
	-ms-flex-line-pack: start; 
	-webkit-align-content: flex-start;
	-moz-align-content: flex-start;
	align-content: flex-start;
}

// align-content: center
@mixin align_content_center(){
	-ms-flex-line-pack: center; 
	-webkit-align-content: center;
	-moz-align-content: center;
	align-content: center;
}

// align-content: end
@mixin align_content_end(){
	-ms-flex-line-pack: end; 
	-webkit-align-content: flex-end;
	-moz-align-content: flex-end;
	align-content: flex-end;
}

// align-content: space-between
@mixin align_content_space_between(){
	-ms-flex-line-pack: justify; 
	-webkit-align-content: space-between;
	-moz-align-content: space-between;
	align-content: space-between;
}

// align-content: space-around
@mixin align_content_space_around(){
	-ms-flex-line-pack: distribute; 
	-webkit-align-content: space-around;
	-moz-align-content: space-around;
	align-content: space-around;
}

// align-content: stretch
@mixin align_content_stretch(){
	-ms-flex-line-pack: stretch; 
	-webkit-align-content: stretch;
	-moz-align-content: stretch;
	align-content: stretch;
}




// FLEX DIRECTION METHODS
// Direction: specifying the direction of the main flexbox axis


@mixin flex_direction_row(){
	box-direction: normal;
    box-orient: horizontal;
    flex-direction: row;
}

@mixin flex_direction_row_reverse(){
	box-direction: reverse;
    box-orient: horizontal;
    flex-direction: row-reverse;
}

@mixin flex_direction_column(){
	box-direction: normal;
    box-orient: vertical;
    flex-direction: column;
}


@mixin flex_direction_column_reverse(){
	box-direction: reverse;
    box-orient: vertical;
    flex-direction: column-reverse;
}


// FLEX WRAP METHODS
// Wrapping: specifying whether and how flex items wrap along the cross-axis
// Firefox doesn't currently support this syntax


@mixin flex_wrap_nowrap(){
	box-lines: single;
    flex-wrap: nowrap;
}

@mixin flex_wrap_wrap(){
	box-lines: multiple;
    flex-wrap: wrap;
}

// 2009 syntax does not support reverse wrapping at this time
@mixin flex_wrap_wrap_reverse(){
    flex-wrap: wrap-reverse;
}
